{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\Documents\\\\GitHub\\\\challenge-5-dex\\\\packages\\\\react-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\"; //import Torus from \"@toruslabs/torus-embed\"\n\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, TokenBalance, Dex } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useContractConfig } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\r\n    Welcome to üèó scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/scaffold-eth/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    üåè EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // üõ∞ providers\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst poktMainnetProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null; // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer; // Coinbase walletLink init\n\nconst walletLink = new WalletLink({\n  appName: \"coinbase\"\n}); // WalletLink provider\n\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1); // Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true,\n  // optional\n  theme: \"light\",\n  // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n          // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\" // xDai\n\n        }\n      }\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\"\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"\n      }\n    },\n    fortmatic: {\n      package: Fortmatic,\n      // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\" // required\n\n      }\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      }\n    },\n    authereum: {\n      package: Authereum // required\n\n    }\n  }\n});\n\nfunction App(props) {\n  _s();\n\n  const mainnetProvider = poktMainnetProvider && poktMainnetProvider._isProvider ? poktMainnetProvider : scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  const contractConfig = useContractConfig(); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);\n  /*\r\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\r\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\r\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network ID\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"chain id 1337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 26\n            }, this), \" for localhost and you need to change it to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"31337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 90\n            }, this), \" to work with HardHat.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this);\n    } else {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: networkSelected && networkSelected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 26\n            }, this), \" selected and you need to be on\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: async () => {\n                const ethereum = window.ethereum;\n                const data = [{\n                  chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                  chainName: targetNetwork.name,\n                  nativeCurrency: targetNetwork.nativeCurrency,\n                  rpcUrls: [targetNetwork.rpcUrl],\n                  blockExplorerUrls: [targetNetwork.blockExplorer]\n                }];\n                console.log(\"data\", data);\n                let switchTx; // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n\n                try {\n                  switchTx = await ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{\n                      chainId: data[0].chainId\n                    }]\n                  });\n                } catch (switchError) {\n                  // not checking specific error code, because maybe we're not using MetaMask\n                  try {\n                    switchTx = await ethereum.request({\n                      method: \"wallet_addEthereumChain\",\n                      params: data\n                    });\n                  } catch (addError) {// handle \"add\" error\n                  }\n                }\n\n                if (switchTx) {\n                  console.log(switchTx);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: networkLocal && networkLocal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      children: targetNetwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"0.01\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), networkDisplay, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          textAlign: \"center\"\n        },\n        selectedKeys: [route],\n        mode: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/\");\n            },\n            to: \"/\",\n            children: \"YourContract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)\n        }, \"/\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/contracts\");\n            },\n            to: \"/contracts\",\n            children: \"Debug Contracts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, \"/contracts\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: readContracts && readContracts.DEX && address && localProvider ? /*#__PURE__*/_jsxDEV(Dex, {\n            address: address,\n            tx: tx,\n            writeContracts: writeContracts,\n            localProvider: localProvider,\n            mainnetProvider: mainnetProvider,\n            readContracts: readContracts,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig,\n            signer: userSigner,\n            price: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contracts\",\n          children: [/*#__PURE__*/_jsxDEV(Contract, {\n            name: \"DEX\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"Balloons\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenBalance, {\n        name: \"Balloons\",\n        img: \"üéà\",\n        address: address,\n        contracts: readContracts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), faucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HGbfs+kehfolF0pmfZw2MXXudqU=\", false, function () {\n  return [useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractConfig, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/marce/Documents/GitHub/challenge-5-dex/packages/react-app/src/App.jsx"],"names":["Portis","WalletConnectProvider","Alert","Button","Col","Menu","Row","Authereum","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","Fortmatic","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","WalletLink","Web3Modal","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","TokenBalance","Dex","INFURA_ID","NETWORK","NETWORKS","Transactor","useContractConfig","ethers","require","targetNetwork","localhost","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum","App","props","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","switchTx","request","method","params","switchError","addError","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","textAlign","DEX","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import Portis from \"@portis/web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport Authereum from \"authereum\";\r\nimport {\r\n  useBalance,\r\n  useContractLoader,\r\n  useContractReader,\r\n  useGasPrice,\r\n  useOnBlock,\r\n  useUserProviderAndSigner\r\n} from \"eth-hooks\";\r\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\r\nimport Fortmatic from \"fortmatic\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\n//import Torus from \"@toruslabs/torus-embed\"\r\nimport WalletLink from \"walletlink\";\r\nimport Web3Modal from \"web3modal\";\r\nimport \"./App.css\";\r\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, TokenBalance, Dex } from \"./components\";\r\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\r\nimport { Transactor } from \"./helpers\";\r\nimport { useContractConfig } from \"./hooks\";\r\n\r\nconst { ethers } = require(\"ethers\");\r\n/*\r\n    Welcome to üèó scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/scaffold-eth/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    üåè EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\r\n\r\n/// üì° What chain are your contracts deployed to?\r\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\r\n\r\n// üò¨ Sorry for all the console logging\r\nconst DEBUG = true;\r\nconst NETWORKCHECK = true;\r\n\r\n// üõ∞ providers\r\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\r\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\r\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\r\n//\r\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\r\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\r\nconst scaffoldEthProvider = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\r\n  : null;\r\nconst poktMainnetProvider = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\r\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\r\n    )\r\n  : null;\r\nconst mainnetInfura = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\r\n  : null;\r\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\r\n// üè† Your local provider is usually pointed at your local blockchain\r\nconst localProviderUrl = targetNetwork.rpcUrl;\r\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\r\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\r\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\r\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\r\n\r\n// üî≠ block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n// Coinbase walletLink init\r\nconst walletLink = new WalletLink({\r\n  appName: \"coinbase\",\r\n});\r\n\r\n// WalletLink provider\r\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\r\n\r\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\r\n  cacheProvider: true, // optional\r\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        bridge: \"https://polygon.bridge.walletconnect.org\",\r\n        infuraId: INFURA_ID,\r\n        rpc: {\r\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\r\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n          100: \"https://dai.poa.network\", // xDai\r\n        },\r\n      },\r\n    },\r\n    portis: {\r\n      display: {\r\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\r\n        name: \"Portis\",\r\n        description: \"Connect to Portis App\",\r\n      },\r\n      package: Portis,\r\n      options: {\r\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\r\n      },\r\n    },\r\n    fortmatic: {\r\n      package: Fortmatic, // required\r\n      options: {\r\n        key: \"pk_live_5A7C91B2FC585A17\", // required\r\n      },\r\n    },\r\n    // torus: {\r\n    //   package: Torus,\r\n    //   options: {\r\n    //     networkParams: {\r\n    //       host: \"https://localhost:8545\", // optional\r\n    //       chainId: 1337, // optional\r\n    //       networkId: 1337 // optional\r\n    //     },\r\n    //     config: {\r\n    //       buildEnv: \"development\" // optional\r\n    //     },\r\n    //   },\r\n    // },\r\n    \"custom-walletlink\": {\r\n      display: {\r\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\r\n        name: \"Coinbase\",\r\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\r\n      },\r\n      package: walletLinkProvider,\r\n      connector: async (provider, _options) => {\r\n        await provider.enable();\r\n        return provider;\r\n      },\r\n    },\r\n    authereum: {\r\n      package: Authereum, // required\r\n    },\r\n  },\r\n});\r\n\r\nfunction App(props) {\r\n  const mainnetProvider =\r\n    poktMainnetProvider && poktMainnetProvider._isProvider\r\n      ? poktMainnetProvider\r\n      : scaffoldEthProvider && scaffoldEthProvider._network\r\n      ? scaffoldEthProvider\r\n      : mainnetInfura;\r\n\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  const [address, setAddress] = useState();\r\n\r\n  const logoutOfWeb3Modal = async () => {\r\n    await web3Modal.clearCachedProvider();\r\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\r\n      await injectedProvider.provider.disconnect();\r\n    }\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  };\r\n\r\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\r\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\r\n\r\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\r\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\r\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\r\n  const userSigner = userProviderAndSigner.signer;\r\n\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (userSigner) {\r\n        const newAddress = await userSigner.getAddress();\r\n        setAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [userSigner]);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\r\n  const selectedChainId =\r\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\r\n\r\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userSigner, gasPrice);\r\n\r\n  // Faucet Tx can be used to send funds from the faucet\r\n  const faucetTx = Transactor(localProvider, gasPrice);\r\n\r\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different üõ∞ providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  const contractConfig = useContractConfig();\r\n\r\n  // Load in your local üìù contract and read a value from it:\r\n  const readContracts = useContractLoader(localProvider, contractConfig);\r\n\r\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\r\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\r\n\r\n  // EXTERNAL CONTRACT EXAMPLE:\r\n  //\r\n  // If you want to bring in the mainnet DAI contract it would look like:\r\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\r\n\r\n  // If you want to call a function on a new block\r\n  useOnBlock(mainnetProvider, () => {\r\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\r\n  });\r\n\r\n  // Then read your DAI balance like:\r\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\r\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\r\n  ]);\r\n\r\n  /*\r\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\r\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\r\n  */\r\n\r\n  //\r\n  // üß´ DEBUG üë®üèª‚Äçüî¨\r\n  //\r\n  useEffect(() => {\r\n    if (\r\n      DEBUG &&\r\n      mainnetProvider &&\r\n      address &&\r\n      selectedChainId &&\r\n      yourLocalBalance &&\r\n      yourMainnetBalance &&\r\n      readContracts &&\r\n      writeContracts &&\r\n      mainnetContracts\r\n    ) {\r\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\r\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\r\n      console.log(\"üè† localChainId\", localChainId);\r\n      console.log(\"üë©‚Äçüíº selected address:\", address);\r\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\r\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\r\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\r\n      console.log(\"üìù readContracts\", readContracts);\r\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\r\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\r\n      console.log(\"üîê writeContracts\", writeContracts);\r\n    }\r\n  }, [\r\n    mainnetProvider,\r\n    address,\r\n    selectedChainId,\r\n    yourLocalBalance,\r\n    yourMainnetBalance,\r\n    readContracts,\r\n    writeContracts,\r\n    mainnetContracts,\r\n  ]);\r\n\r\n  let networkDisplay = \"\";\r\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\r\n    const networkSelected = NETWORK(selectedChainId);\r\n    const networkLocal = NETWORK(localChainId);\r\n    if (selectedChainId === 1337 && localChainId === 31337) {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"‚ö†Ô∏è Wrong Network ID\"\r\n            description={\r\n              <div>\r\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\r\n                HardHat.\r\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"‚ö†Ô∏è Wrong Network\"\r\n            description={\r\n              <div>\r\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\r\n                <Button\r\n                  onClick={async () => {\r\n                    const ethereum = window.ethereum;\r\n                    const data = [\r\n                      {\r\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\r\n                        chainName: targetNetwork.name,\r\n                        nativeCurrency: targetNetwork.nativeCurrency,\r\n                        rpcUrls: [targetNetwork.rpcUrl],\r\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\r\n                      },\r\n                    ];\r\n                    console.log(\"data\", data);\r\n\r\n                    let switchTx;\r\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\r\n                    try {\r\n                      switchTx = await ethereum.request({\r\n                        method: \"wallet_switchEthereumChain\",\r\n                        params: [{ chainId: data[0].chainId }],\r\n                      });\r\n                    } catch (switchError) {\r\n                      // not checking specific error code, because maybe we're not using MetaMask\r\n                      try {\r\n                        switchTx = await ethereum.request({\r\n                          method: \"wallet_addEthereumChain\",\r\n                          params: data,\r\n                        });\r\n                      } catch (addError) {\r\n                        // handle \"add\" error\r\n                      }\r\n                    }\r\n\r\n                    if (switchTx) {\r\n                      console.log(switchTx);\r\n                    }\r\n                  }}\r\n                >\r\n                  <b>{networkLocal && networkLocal.name}</b>\r\n                </Button>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n\r\n    provider.on(\"chainChanged\", chainId => {\r\n      console.log(`chain changed to ${chainId}! updating providers`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    provider.on(\"accountsChanged\", () => {\r\n      console.log(`account changed!`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    // Subscribe to session disconnection\r\n    provider.on(\"disconnect\", (code, reason) => {\r\n      console.log(code, reason);\r\n      logoutOfWeb3Modal();\r\n    });\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = \"\";\r\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\r\n\r\n  const [faucetClicked, setFaucetClicked] = useState(false);\r\n  if (\r\n    !faucetClicked &&\r\n    localProvider &&\r\n    localProvider._network &&\r\n    localProvider._network.chainId === 31337 &&\r\n    yourLocalBalance &&\r\n    ethers.utils.formatEther(yourLocalBalance) <= 0\r\n  ) {\r\n    faucetHint = (\r\n      <div style={{ padding: 16 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            faucetTx({\r\n              to: address,\r\n              value: ethers.utils.parseEther(\"0.01\"),\r\n            });\r\n            setFaucetClicked(true);\r\n          }}\r\n        >\r\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\r\n      <Header />\r\n      {networkDisplay}\r\n      <BrowserRouter>\r\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/\");\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              YourContract\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/contracts\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/contracts\");\r\n              }}\r\n              to=\"/contracts\"\r\n            >\r\n              Debug Contracts\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {readContracts && readContracts.DEX && address && localProvider ? (\r\n              <Dex\r\n                address={address}\r\n                tx={tx}\r\n                writeContracts={writeContracts}\r\n                localProvider={localProvider}\r\n                mainnetProvider={mainnetProvider}\r\n                readContracts={readContracts}\r\n                blockExplorer={blockExplorer}\r\n                contractConfig={contractConfig}\r\n                signer={userSigner}\r\n                price={price}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Route>\r\n\r\n          <Route path=\"/contracts\">\r\n            <Contract\r\n              name=\"DEX\"\r\n              signer={userSigner}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n              contractConfig={contractConfig}\r\n            />\r\n            <Contract\r\n              name=\"Balloons\"\r\n              signer={userSigner}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n              contractConfig={contractConfig}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      <ThemeSwitch />\r\n\r\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\r\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n        <Account\r\n          address={address}\r\n          localProvider={localProvider}\r\n          userSigner={userSigner}\r\n          mainnetProvider={mainnetProvider}\r\n          price={price}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n          blockExplorer={blockExplorer}\r\n        />\r\n\r\n        <TokenBalance name={\"Balloons\"} img={\"üéà\"} address={address} contracts={readContracts} />\r\n        {faucetHint}\r\n      </div>\r\n\r\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\r\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={8}>\r\n            <Ramp price={price} address={address} networks={NETWORKS} />\r\n          </Col>\r\n\r\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\r\n            <GasGauge gasPrice={gasPrice} />\r\n          </Col>\r\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\r\n            <Button\r\n              onClick={() => {\r\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\r\n              }}\r\n              size=\"large\"\r\n              shape=\"round\"\r\n            >\r\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\r\n                üí¨\r\n              </span>\r\n              Support\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={24}>\r\n            {\r\n              /*  if the local provider has a signer, let's show the faucet:  */\r\n              faucetAvailable ? (\r\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}